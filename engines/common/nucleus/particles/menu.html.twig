{% set menu = gantry.menu.instance(particle) %}

{% macro displayParticle(item, gantry) %}
    {% if item.particle.enabled is null or item.particle.enabled %}
        {% set classes = item.options.block.class %}
        <div class="menu-item-particle{{ classes ? ' ' ~ classes }}">
        {% include ['particles/' ~ item.particle ~ '.html.twig', '@particles/' ~ item.particle ~ '.html.twig']
        ignore missing with {gantry: gantry, particle: item.options.particle } only %}
        </div>
    {% endif %}
{% endmacro %}

{% macro displayTitle(item, gantry) %}
    {% if not item.icon_only or not (item.image or item.icon) %}
        <span class="g-menu-item-title">{{ item.title|e }}</span>
        {% if item.subtitle %}
            <span class="g-menu-item-subtitle">{{ item.subtitle|e }}</span>
        {% endif %}
    {% endif %}
{% endmacro %}

{% macro displayItem(item, root, menu, gantry) %}
    {% if item.visible %}
        {% set title = item.icon_only ? ' title="' ~ item.title|e ~ '"' %}
        {% set active = menu.isActive(item) ? ' active' %}
        {% set dropdown = item.level == 1 ? ' g-' ~ item.getDropdown()|e %}
        {% set parent = item.children ? ' g-parent' %}
        {% set target = item.target != '_self' ? ' target="' ~ item.target|e ~ '"' %}


        {% set hasCustomWidth = item.width|default('auto') != 'auto' %}
        {% set customWidth = '' %}
        {% if hasCustomWidth and not (root.getDropdown() == 'fullwidth' and item.level > 1) %}
            {% set customWidth = ' style="position: relative;"' %}
        {% endif %}

        <li id="g-menu-item-{{ item.id|e }}" class="g-menu-item g-menu-item-type-{{ item.type|e }} g-menu-item-{{ item.id|e }}{{ parent|raw }}{{ active|raw }}{{ dropdown|raw }} {% if item.url and item.children %}g-menu-item-link-parent{% endif %}{{ item.class|e|default('') }}"{{ customWidth|raw }}>
            {% if item.url %}<a class="g-menu-item-container" href="{{ item.url|e }}"{{ (title ~ target)|raw }}>
            {% else %}<div class="g-menu-item-container" data-g-menuparent="">{% endif %}
                {% if item.image %}
                    <img src="{{ url(item.image)|e }}" alt="{{ item.title|e }}" />
                {% elseif item.icon %}
                    <i class="{{ item.icon|e }}"></i>
                {% endif %}
                {% if item.url %}
                    <span class="g-menu-item-content">
                        {{ _self.displayTitle(item, gantry) }}
                    </span>
                    {% if (item.children) -%}
                        <span class="g-menu-parent-indicator" data-g-menuparent=""></span>
                    {%- endif %}
                {% else %}
                    {% if item.type == 'particle' %}
                        {{ _self.displayParticle(item, gantry) }}
                    {% elseif item.type == 'heading' %}
                        <span class="g-nav-header g-menu-item-content"{{ title|raw }}>{{ item.title|e }}</span>
                    {% else %}
                        <span class="g-separator g-menu-item-content"{{ title|raw }}>{{ _self.displayTitle(item) }}</span>
                    {% endif %}
                        {% if (item.children) -%}
                            <span class="g-menu-parent-indicator"></span>
                        {%- endif %}
                {% endif %}
            {% if item.url %}</a>
            {% else %}</div>{% endif %}
            {% if (item.children) -%}
                {{ _self.displaySubmenu(item, root, menu, gantry) }}
            {%- endif %}
        </li>
    {% endif %}
{% endmacro %}

{% macro displayContainers(item, root, menu, gantry) %}
    <div class="g-grid">
        {% set groups = item.getDropdown() == 'standard' ? [item] : item.groups %}
        {% for column, items in groups %}
        <div class="g-block {{ item.columnWidth(column)|toGrid|e }}">
            <ul class="g-sublevel">
                <li class="g-level-{{ item.level|e }} g-go-back">
                    <a class="g-menu-item-container" href="#" data-g-menuparent=""><span>Back</span></a>
                </li>
                {{ _self.displayItems(items, menu, gantry, root) }}
            </ul>
        </div>
        {% endfor %}
    </div>
{% endmacro %}

{% macro displayItems(items, menu, gantry, root) %}
    {% for item in items %}
        {{ _self.displayItem(item, root|default(item), menu, gantry) }}
    {% endfor %}
{% endmacro %}

{% macro displaySubmenu(item, root, menu, gantry) %}
    {% set hasCustomWidth = item.width|default('auto') != 'auto' %}
    {% if hasCustomWidth and not (root.getDropdown() == 'fullwidth' and item.level > 1) %}
        {% set customWidth = ' style="width: ' ~ item.width|raw ~ '" data-g-item-width="' ~ item.width|raw ~ '"' %}
    {% endif %}
    <ul class="g-dropdown g-inactive {{ gantry.config.get('styles.menu.animation')|default('fade') }}"{{ customWidth|raw }}>
        <li class="g-dropdown-column">
            {{ _self.displayContainers(item, root, menu, gantry) }}
        </li>
    </ul>
{% endmacro %}

<nav class="g-main-nav" role="navigation"{{ particle.mobileTarget ? ' data-g-mobile-target' : '' }}>
    <ul class="g-toplevel">
        {{ _self.displayItems(menu.root, menu, gantry) }}
    </ul>
</nav>
